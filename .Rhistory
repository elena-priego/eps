path_src <<- here::here("src")
}
paths_generation("trial")
here::here()
cat(yalm)
library(here)
today <- Sys.Date()
yalm <- paste("---",
"date: ",
sep = "\n")
cat(yalm)
yalm <- paste("---",
"date: ",
today,
sep = "\n")
cat(yalm)
yalm <- paste("---",
paste0("date: ", today),
sep = "\n")
cat(yalm)
#'
#'
#' @param experiment_name Full name of the experiment
#'
#' @return
#' @export
#'
#' @examples path_builder("VHL-2101_experiment")
#'
#'
path_builder <- function(experiment_name) {
path_data <<- here::here("data", experiment_name)
dir.create(path_data, showWarnings = FALSE)
path_doc <<- here::here("doc")
path_raw <<- here::here("raw", experiment_name)
dir.create(path_raw, showWarnings = FALSE)
path_result <<- here::here("result", experiment_name)
dir.create(path_result, showWarnings = FALSE)
path_src <<- here::here("src")
experiment_template <- function(experiment_name)
today <- Sys.Date()
yalm <- paste(
"---",
paste0("title: ", experiment_name),
paste0("date: ", today),
"---",
"# Heading 1",
sep = "\n"
)
write(yalm,
file = paste0(path_doc, experiment_name, ".Rmd"),
append = TRUE)
}
path_builder("test")
path_builder("test")
path_doc
#'
#'
#' @param experiment_name Full name of the experiment
#'
#' @return
#' @export
#'
#' @examples path_builder("VHL-2101_experiment")
#'
#'
path_builder <- function(experiment_name) {
path_data <<- here::here("data", experiment_name)
dir.create(path_data, showWarnings = FALSE)
path_doc <<- here::here("doc")
path_raw <<- here::here("raw", experiment_name)
dir.create(path_raw, showWarnings = FALSE)
path_result <<- here::here("result", experiment_name)
dir.create(path_result, showWarnings = FALSE)
path_src <<- here::here("src")
experiment_template <- function(experiment_name)
today <- Sys.Date()
yalm <- paste(
"---",
paste0("title: ", experiment_name),
paste0("date: ", today),
"---",
"# Heading 1",
sep = "\n"
)
write(yalm,
file = here::here("doc", paste0(experiment_name, ".Rmd")),
append = TRUE)
}
path_builder("test")
#' @param experiment_name Full name of the experiment. Should have the following
#' structure: project, "hash", year, experiment number, "underscore",
#' experiment title
#'
#' @return
#' @export
#'
#' @examples experiment_init("VHL-2101_experiment")
#'
#'
experiment_init <- function(experiment_name) {
dir.create(here::here("data", experiment_name), showWarnings = FALSE)
dir.create(here::here("raw", experiment_name), showWarnings = FALSE)
dir.create(here::here("result", experiment_name), showWarnings = FALSE)
yalm <- paste(
"---",
paste0("title: ", experiment_name),
paste0("date: ", Sys.Date()),
"---",
"\n",
paste0("# ", experiment_name),
"\n",
"## Aim",
"\n",
"## Method",
"\n",
"## Results",
"\n",
paste0("path_builder(", experiment_name, "),"),
"\n",
"## Conclusions",
sep = "\n"
)
write(yalm,
file = here::here("doc", paste0(experiment_name, ".Rmd")),
append = TRUE)
}
setwd(here::here("trial"))
experiment_init("EP-2105_trial")
#' @param experiment_name Full name of the experiment. Should have the following
#' structure: project, "hash", year, experiment number, "underscore",
#' experiment title
#'
#' @return
#' @export
#'
#' @examples experiment_init("VHL-2101_experiment")
#'
#'
experiment_init <- function(experiment_name) {
dir.create(here::here("data", experiment_name), showWarnings = FALSE)
dir.create(here::here("raw", experiment_name), showWarnings = FALSE)
dir.create(here::here("result", experiment_name), showWarnings = FALSE)
yalm <- paste(
"---",
paste0("title: ", experiment_name),
paste0("date: ", Sys.Date()),
"---",
"\n",
paste0("# ", experiment_name),
"\n",
"## Aim",
"\n",
"## Method",
"\n",
"## Results",
"\n",
paste0("path_builder(", experiment_name, "),"),
"\n",
"## Conclusions",
sep = "\n"
)
write(yalm,
file = here::here("doc"), paste0(experiment_name, ".Rmd"),
append = TRUE)
}
experiment_init("EP-2105_trial")
#' @param experiment_name Full name of the experiment. Should have the following
#' structure: project, "hash", year, experiment number, "underscore",
#' experiment title
#'
#' @return
#' @export
#'
#' @examples experiment_init("VHL-2101_experiment")
#'
#'
experiment_init <- function(experiment_name) {
dir.create(here::here("data", experiment_name), showWarnings = FALSE)
dir.create(here::here("raw", experiment_name), showWarnings = FALSE)
dir.create(here::here("result", experiment_name), showWarnings = FALSE)
yalm <- paste(
"---",
paste0("title: ", experiment_name),
paste0("date: ", Sys.Date()),
"---",
"\n",
paste0("# ", experiment_name),
"\n",
"## Aim",
"\n",
"## Method",
"\n",
"## Results",
"\n",
paste0("path_builder(", experiment_name, "),"),
"\n",
"## Conclusions",
sep = "\n"
)
write(yalm,
file = here::here("doc"), paste0(parse(experiment_name), ".Rmd"),
append = TRUE)
}
experiment_init("EP-2105_trial")
here::here("doc")
write("hi", "C:/Users/elena/Documents/R/github/eps/doc/hi.Rmd")
here::here()
library(here)
here::here()
#' @param experiment_name Full name of the experiment. Should have the following
#' structure: project, "hash", year, experiment number, "underscore",
#' experiment title
#'
#' @return
#' @export
#'
#' @examples experiment_init("VHL-2101_experiment")
#'
#'
experiment_init <- function(experiment_name) {
dir.create(here::here("data", experiment_name), showWarnings = FALSE)
dir.create(here::here("raw", experiment_name), showWarnings = FALSE)
dir.create(here::here("result", experiment_name), showWarnings = FALSE)
yalm <- paste(
"---",
paste0("title: ", experiment_name),
paste0("date: ", Sys.Date()),
"---",
"\n",
paste0("# ", experiment_name),
"\n",
"## Aim",
"\n",
"## Method",
"\n",
"## Results",
"\n",
paste0("path_builder(", experiment_name, "),"),
"\n",
"## Conclusions",
sep = "\n"
)
write(yalm,
file = here::here("trial", "doc"), paste0(parse(experiment_name), ".Rmd"),
append = TRUE)
}
experiment_init("EP-2105_trial")
write("hi", "C:/Users/elena/Documents/R/github/eps/doc/trial/hi.Rmd")
write("hi", "C:\Users\elena\Documents\R\github\eps\trial\hi.Rmd")
write("hi", "C:\\Users\elena\Documents\R\github\eps\trial\hi.Rmd")
write("hi", "C:\\Users\\elena\\Documents\\R\\github\\eps\\trial\\hi.Rmd")
setwd("..")
experiment_name <-"trial"
file = paste0(here::here("doc"), experiment_name, ".Rmd")
file = paste0(here::here("doc", ""), experiment_name, ".Rmd")
file = paste0(here::here("doc", ""), experiment_name, ".Rmd")
file = paste0(here::here("doc", experiment_name), ".Rmd")
#' @param experiment_name Full name of the experiment. Should have the following
#' structure: project, "hash", year, experiment number, "underscore",
#' experiment title
#'
#' @return
#' @export
#'
#' @examples experiment_init("VHL-2101_experiment")
#'
#'
experiment_init <- function(experiment_name) {
dir.create(here::here("data", experiment_name), showWarnings = FALSE)
dir.create(here::here("raw", experiment_name), showWarnings = FALSE)
dir.create(here::here("result", experiment_name), showWarnings = FALSE)
yalm <- paste(
"---",
paste0("title: ", experiment_name),
paste0("date: ", Sys.Date()),
"---",
"\n",
paste0("# ", experiment_name),
"\n",
"## Aim",
"\n",
"## Method",
"\n",
"## Results",
"\n",
paste0("path_builder(", experiment_name, "),"),
"\n",
"## Conclusions",
sep = "\n"
)
write(yalm,
file = paste0(here::here("doc", experiment_name), ".Rmd"),
append = TRUE)
}
setwd("~/R/github/VHL")
here::here()
open("C:/Users/elena/Documents/R/github/eps/README.md")
open(open = "C:/Users/elena/Documents/R/github/eps/README.md")
file.eidt("C:/Users/elena/Documents/R/github/eps/README.md")
file.edit("C:/Users/elena/Documents/R/github/eps/README.md")
file_edit("C:/Users/elena/Documents/R/github/eps/README.md")
utils::file_edit("C:/Users/elena/Documents/R/github/eps/README.md")
usethis::file_edit("C:/Users/elena/Documents/R/github/eps/README.md")
file.edit("C:/Users/elena/Documents/R/github/eps/README.md")
file.edit("C:/Users/elena/Documents/R/github/eps/README.md")
setwd("../eps")
devtools::document()
devtools::document()
#' @param experiment_name Full name of the experiment. Should have the following
#' structure: project, "hash", year, experiment number, "underscore",
#' experiment title
#'
#' @return
#' @export
#'
#' @examples experiment_init("VHL-2101_experiment")
#'
#'
experiment_init <- function(experiment_name) {
dir.create(here::here("data", experiment_name), showWarnings = FALSE)
dir.create(here::here("raw", experiment_name), showWarnings = FALSE)
dir.create(here::here("result", experiment_name), showWarnings = FALSE)
yalm <- paste(
"---",
paste0("title: ", experiment_name),
"author: Elena Priego Saiz",
paste0("date: ", Sys.Date()),
"Short conclusion: ",
"output: html_document",
"---",
"\n",
paste0("# ", experiment_name),
"\n",
"## Aim",
"\n",
"## Method",
"\n",
"## Results",
"\n",
"```{r setup, include=FALSE}",
"\n",
"## global options",
'options(encoding = UTF-8")',
"\n",
"## packages that will be used",
'library("eps")',
"\n",
"## paths",
'eps::path_builder(", experiment_name, ")"',
"\n",
"## rmarkdown settings",
"knitr::opts_chunk$set(",
"   message = FALSE,",
"   warning = FALSE,",
'   fig.align = "center",',
'   fig.path = file.path(path_result, "plots"),',
'   fig.pos = "H",',
"   dpi = 300",
")",
"\n",
"```",
"\n",
"\n",
"## Conclusions",
sep = "\n"
)
cover <- paste0(here::here("doc", experiment_name), ".Rmd")
write(yalm,
file = cover,
append = TRUE)
file.edit(cover)
}
devtools::document()
devtools::build()
install.packages("~/R/github/eps_0.1.1.tar.gz", repos = NULL, type = "source")
install.packages("~/R/github/eps_0.1.1.tar.gz", repos = NULL, type = "source")
load("C:/Users/elena/Documents/R/github/eps/data/micecode.Rdata")
micecode
data <- readRDS("C:/Program Files/R/R-4.1.0/library/datasets/Meta/data.rds")
View(data)
Rdata <- readRDS("C:/Program Files/R/R-4.1.0/library/datasets/data/Rdata.rds")
links <- readRDS("C:/Program Files/R/R-4.1.0/library/datasets/Meta/links.rds")
str(micecode)
loadedNAmespaces()
loadedNamespaces()
library(eps)
loadedNamespaces()
data(micecode)
data(eps::micecode)
data(eps::micecode.RData)
micecode
micecode
eps::micecode
data(micecode)
data(eps::micecode)
?read_excel
??read_excel
??sapply
gates <- c("Lymphocytes/Single Cells/Single Cells/CD452/" = "",
"Freq. of Parent" = "Freq.", "Freq. of Grandparent" = "Freq.",
"Geometric Mean" = "GMFI", "Median" = "MdFI", "\\)" = "",
"Ly6G, Ly6C subset/AMs" = "AMs", "Ly6G, Ly6C subset/EOs" = "EOs",
"Monocytes" = "Mos", "Neutrophils" = "NOs")
save(gates, "./data/gate_pattern.RData")
save(gates, file = "./data/gate_pattern.RData")
gate_pattern = c()
list <- ("")
list <- ("Monocytes are green", "Neutrophils (Freq. of Grandparent")
list <- c("Monocytes are green", "Neutrophils (Freq. of Grandparent")
a<- str_replace_all(list, gates)
library(tidyverse)
a<- str_replace_all(list, gates)
b <- str_replace_all(list, gate_pattern)
b <- str_replace_all(list, c())
b <- str_replace_all(list, ""
)
b <- str_replace_all(list, "")
b <- str_replace_all(list, c("", ""))
b <- str_replace_all(list, c("" = ""))
b <- str_replace_all(list, "", "")
b <- str_replace_all(list, "", "")
devtools:use_data(gates, eps)
library(devtools)
devtools::use_data(gates, eps)
use_data(gates, eps)
load("C:/Users/elena/Documents/R/github/eps/data/micecode.Rdata")
use_data(micecode, eps, overwrite = TRUE)
gate_pattern <- gates
use_data(gate_pattern, eps, overwrite = TRUE)
data("micecode")
rm("micecode")
str_replace("La casa es bonita", micecode)
str_replace("La casa es bonita", data(micecode))
str_replace("La casa es bonita", micecode)
str_replace_all("La casa es bonita", micecode)
RColorBrewer::display.brewer.all()
devtools::document()
devtools::document()
devtools::document()
install.packages("ggthemes")
devtools::document()
devtools::build()
unistall.packages(eps)
remove.packages("eps", lib="~/R/win-library/4.1")
install.packages("~/R/github/eps_0.1.1.tar.gz", repos = NULL, type = "source")
install.packages("~/R/github/eps_0.1.1.tar.gz", repos = NULL, type = "source")
install.packages("~/R/github/eps_0.1.1.tar.gz", repos = NULL, type = "source")
load("~/R/github/eps/data/gate_pattern.rda")
gate_pattern
##Computer1
installed <- as.data.frame(installed.packages())
write.csv(installed, 'installed_previously.csv')
write.csv(installed, './inst/installed_previously.csv')
Working on R (\>= 3.5.0)
eps is an R package with miscellaneous R functions that are useful to me.
#' @return a tibble with the tidy format
#' @export
#'
#' @examples
#' data(gate_pattern)
#' data(micecode)
#' facs_tidytable("table.xls", path_data, "animalario.csv",
#'     gate_pattern = gate_pattern, micecode = micecode)
#'
#'
facs_tidytable <-
function(file,
path_data,
animalario_file,
gate_pattern,
path_raw,
micecode) {
file <- "Table.xls"
file <- here::here(path_data, file)
tidy <- readxl::read_excel(file)
tidy <- sapply(tidy[], function(y)
as.character(y))
tidy <- as_tibble(tidy)
tidy <- tidy[!(tidy[, 1] == "Mean" | tidy[, 1] == "SD"), ]
freq <- grep("(.*) Freq. (.*)", names(tidy))
tidy[freq] <- lapply(tidy[freq], function(y)
sub("%", "", y))
names(tidy) <- str_replace_all(names(tidy), gate_pattern)
tidy <- tidy %>%  pivot_longer(cols = -"...1",
names_to = "statistic",
values_to = "value") %>%
separate("...1",
into = c("organ", "mice"),
sep = "_") %>%
separate("statistic",
into = c("cell", "stat2"),
sep = "\\|") %>%
separate("stat2", into = c("stat", "marker"), sep = "\\(") %>%
mutate(marker = replace_na(marker, "freq")) %>%
mutate(mice = str_replace_all(mice, ".fcs", "")) %>%
mutate(cell = sub(".*/", "", cell)) %>%
mutate_all(trimws)
genotype <- get_genotype(animalario_file, path_raw, micecode)
tidy <- left_join(tidy, genotype, by = "mice")
tidy <- tidy %>%
mutate(
value = as.numeric(value),
organ = as.factor(organ),
mice = as.factor(mice),
cell = as.factor(cell),
stat = as.factor(stat),
marker = as.factor(marker),
genotype = as.factor(genotype)
)
return(tidy)
}
